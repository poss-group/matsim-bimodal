<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>
	<module name="changeMode" >
		<!-- Defines whether car availability is considered be considered or not. An agent has no car only if it has no license, or never access to a car. Default: true -->
		<param name="ignoreCarAvailability" value="false" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="pt,drt" />
	</module>
	<module name="controler" >
		<!-- Default=1000. Last Iteration of a simulation. -->
		<param name="lastIteration" value="0" />
		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="deleteDirectoryIfExists" />
	</module>
	<module name="dvrp" >
		<!-- Mode of which the network will be used for throwing events and hence calculating travel times. Default is car. -->
		<param name="mobsimMode" value="car" />
		<!-- Set of modes of which the network will be used for DVRP travel time estimation and routing DVRP vehicles. Each specific DVRP mode may use a subnetwork of this network for routing vehicles (e.g. DRT buses travelling only along a specified links or serving a limited area). Default is "car" (i.e. single-element set of modes), i.e. the car network is used. Empty value "" (i.e. empty set of modes) means no network filtering, i.e. the original scenario.network is used -->
		<param name="networkModes" value="car" />
		<!-- Used for OFFLINE estimation of travel times for VrpOptimizer by means of the exponential moving average. The weighting decrease, alpha, must be in (0,1]. We suggest small values of alpha, e.g. 0.05. The averaging starts from the initial travel time estimates. If not provided, the free-speed TTs is used as the initial estimates -->
		<param name="travelTimeEstimationAlpha" value="0.05" />
		<!-- Used for ONLINE estimation of travel times for VrpOptimizer by combining WithinDayTravelTime and DvrpOfflineTravelTimeEstimator. The beta coefficient is provided in seconds and should be either 0 (no online estimation) or positive (mixed online-offline estimation). For 'beta = 0', only the offline estimate is used: 'onlineTT(t) = offlineTT(t)', where 'offlineTT(t)' in the offline estimate for TT at time 't', For 'beta > 0', estimating future TTs at time 't', uses the currently observed TT to correct the offline estimates is made: where 'currentTT' is the currently observed TT, and 'correction = min(1, max(0, 1 - (time - currentTime) / beta))' The rule is that correction decreases linearly from 1 (when 'time = currentTime') to 0 (when 'time = currentTime + beta' For 'time > currentTime + beta' correction is 0, whereas if 'time < currentTime' it is 1. If beta is sufficiently large, 'beta >> 0', only the currently observed TT is used. -->
		<param name="travelTimeEstimationBeta" value="0.0" />
	</module>
	<module name="global" >
		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in QSim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="4" />
		<param name="randomSeed" value="4392" />
	</module>
	<module name="multiModeDrt" >
		<parameterset type="drt" >
			<!-- Beeline-speed estimate for DRT. Used in analysis, optimisation constraints and in plans file, [m/s]. The default value is 25 km/h -->
			<param name="estimatedDrtSpeed" value="8.333333333333334" />
			<!-- Defines the slope of the maxTravelTime estimation function (optimisation constraint), i.e. maxTravelTimeAlpha * estimated_drt_travel_time + maxTravelTimeBeta. Alpha should not be smaller than 1. -->
			<param name="maxTravelTimeAlpha" value="1.5" />
			<!-- Defines the shift of the maxTravelTime estimation function (optimisation constraint), i.e. maxTravelTimeAlpha * estimated_drt_travel_time + maxTravelTimeBeta. Beta should not be smaller than 0. -->
			<param name="maxTravelTimeBeta" value="1200.0" />
			<!-- Max wait time for the bus to come (optimisation constraint). -->
			<param name="maxWaitTime" value="1200.0" />
			<!-- Mode which will be handled by PassengerEngine and VrpOptimizer (passengers'/customers' perspective) -->
			<param name="mode" value="drt" />
			<!-- Bus stop duration. Must be positive. -->
			<param name="stopDuration" value="30.0" />
			<!-- An XML file specifying the vehicle fleet. The file format according to dvrp_vehicles_v1.dtd -->
			<param name="vehiclesFile" value="drtvehicles.xml" />
		</parameterset>
	</module>
	<module name="network" >
		<param name="inputNetworkFile" value="network.xml" />
	</module>
	<module name="otfvis" >
		<!-- The (initial) size of the agents.  Only a range of numbers is allowed, otherwise otfvis aborts rather ungracefully, or displays no agents at all. -->
		<param name="agentSize" value="120.0" />
		<!-- coloring scheme for otfvis.  Currently (2012) allowed values: standard bvg bvg2 byId gtfs taxicab infection -->
		<param name="coloringScheme" value="standard" />
		<!-- If non-moving items (e.g. agents at activities, at bus stops, etc.) should be showed.  May affect all non-moving items. -->
		<param name="drawNonMovingItems" value="false" />
		<param name="drawTransitFacilities" value="true" />
		<param name="drawTransitFacilityIds" value="true" />
		<param name="leftMouseFunc" value="Zoom" />
		<!-- The (initial) width of the links of the network. Use positive floating point values. -->
		<param name="linkWidth" value="30.0" />
		<!-- Link width is proportional to `numberOfLanes' or to `capacity'. -->
		<param name="linkwidthIsProportionalTo" value="numberOfLanes" />
		<!-- URL to get WMS tiles from. For a local GeoServer instance, use http://localhost:8080/geoserver/wms?service=WMS& -->
		<param name="mapBaseURL" value="" />
		<!-- The WMS layer to display. For GeoServer and a layer called clipped in workspace mz, use mz:clipped -->
		<param name="mapLayer" value="" />
		<!-- Render everything on top of map tiles. Default: From tiles.openstreetmap.org -->
		<param name="mapOverlayMode" value="false" />
		<param name="middleMouseFunc" value="Pan" />
		<param name="rightMouseFunc" value="Select" />
		<param name="showTeleportation" value="false" />
	</module>
	<module name="planCalcScore" >
		<parameterset type="scoringParameters" >
			<param name="waitingPt" value="-1.0" />
			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="12:00:00" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils/m] utility of traveling (e.g. walking or driving) per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="-10.0" />
				<param name="mode" value="car" />
			</parameterset>
			<parameterset type="modeParams" >
				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="0.0" />
				<param name="mode" value="pt" />
			</parameterset>
			<parameterset type="modeParams" >
				<param name="marginalUtilityOfDistance_util_m" value="-5.0" />
				<param name="mode" value="walk" />
			</parameterset>
			<parameterset type="modeParams" >
				<param name="marginalUtilityOfDistance_util_m" value="-5.0" />
				<param name="marginalUtilityOfTraveling_util_hr" value="-5.0" />
				<param name="mode" value="drt" />
			</parameterset>
		</parameterset>
	</module>
	<module name="plans" >
		<param name="inputPlansFile" value="population.xml" />
	</module>
	<module name="planscalcroute" >
		<parameterset type="teleportedModeParameters" >
			<param name="mode" value="walk" />
		</parameterset>
	</module>
	<module name="qsim" >
		<param name="endTime" value="26:00:00" />
		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="minOfEndtimeAndMobsimFinished" />
		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="onlyUseStarttime" />
		<param name="startTime" value="00:00:00" />
	</module>
	<module name="strategy" >
		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="3" />
		<parameterset type="strategysettings" >
			<!-- strategyName of strategy.  Possible default names: SelectRandom BestScore KeepLastSelected ChangeExpBeta SelectExpBeta SelectPathSizeLogit      (selectors), ReRouteTimeAllocationMutatorTimeAllocationMutator_ReRouteChangeSingleTripModeChangeTripModeSubtourModeChoice (innovative strategies). -->
			<param name="strategyName" value="ChangeSingleTripMode" />
			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>
		<parameterset type="strategysettings" >
			<param name="strategyName" value="BestScore" />
			<param name="weight" value="0.9" />
		</parameterset>
	</module>
	<module name="subtourModeChoice" >
		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="" />
		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="true" />
		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="pt,drt" />
	</module>
	<module name="swissRailRaptor" >
		<!-- Sets whether intermodal access and egress modes are selected by least cost (default) or randomly chosen out of the available access / egress modes. -->
		<param name="intermodalAccessEgressModeSelection" value="CalcLeastCostModePerStop" />
		<!-- Possible values: Default, Individual -->
		<param name="scoringParameters" value="Default" />
		<param name="transferPenaltyBaseCost" value="0.0" />
		<param name="transferPenaltyCostPerTravelTimeHour" value="0.0" />
		<param name="transferPenaltyMaxCost" value="Infinity" />
		<param name="transferPenaltyMinCost" value="-Infinity" />
		<!-- time deducted from transfer walk leg during transfers between pt legs in order to avoid missing a vehicle by a few seconds due to delays. -->
		<param name="transferWalkMargin" value="5.0" />
		<!-- If true, SwissRailRaptor tries to detect when agents cannot board a vehicle in the previous iteration because it is already full and tries to find an alternative route instead. -->
		<param name="useCapacityConstraints" value="false" />
		<param name="useIntermodalAccessEgress" value="true" />
		<param name="useModeMappingForPassengers" value="false" />
		<param name="useRangeQuery" value="false" />
		<parameterset type="intermodalAccessEgress" >
			<!-- Radius from the origin / destination coord in which transit stops are searched. Only if less than 2 transit stops are found the search radius is increased step-wise until the maximum search radius set in param radius is reached. -->
			<param name="initialSearchRadius" value="500.0" />
			<!-- Radius from the origin / destination coord in which transit stops are accessible by this mode. -->
			<param name="maxRadius" value="1000.0" />
			<param name="mode" value="walk" />
			<!-- If less than 2 stops were found in initialSearchRadius take the distance of the closest transit stop and add this extension radius to search again.The search radius will not exceed the maximum search radius set in param radius. -->
			<param name="searchExtensionRadius" value="100.0" />
		</parameterset>
	</module>
	<module name="transit" >
		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="transitSchedule.xml" />
		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="true" />
		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="transitVehicles.xml" />
	</module>

</config>
